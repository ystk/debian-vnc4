diff -Naur vnc4-4.1.1+X4.3.0.orig_old/common/boilerplate.mk vnc4-4.1.1+X4.3.0.orig/common/boilerplate.mk
--- vnc4-4.1.1+X4.3.0.orig_old/common/boilerplate.mk	2004-07-14 03:23:21.000000000 +1000
+++ vnc4-4.1.1+X4.3.0.orig/common/boilerplate.mk	2006-02-22 15:16:24.000000000 +1100
@@ -15,7 +15,7 @@
 CFLAGS = @CFLAGS@ $(DIR_CFLAGS)
 CCLD = $(CC)
 CXX = @CXX@
-CXXFLAGS = @CXXFLAGS@
+CXXFLAGS = @CXXFLAGS@ $(DIR_CXXFLAGS)
 CXXLD = $(CXX)
 CPPFLAGS = @CPPFLAGS@
 DEFS = @DEFS@
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/common/Makefile.in vnc4-4.1.1+X4.3.0.orig/common/Makefile.in
--- vnc4-4.1.1+X4.3.0.orig_old/common/Makefile.in	2004-07-14 03:28:00.000000000 +1000
+++ vnc4-4.1.1+X4.3.0.orig/common/Makefile.in	2006-02-22 15:16:24.000000000 +1100
@@ -1,4 +1,6 @@
 
 SUBDIRS = @ZLIB_DIR@ rdr network Xregion rfb
 
+DIR_CFLAGS = -DPIC -fPIC
+DIR_CXXFLAGS = -DPIC -fPIC
 # followed by boilerplate.mk
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/common/network/Makefile.in vnc4-4.1.1+X4.3.0.orig/common/network/Makefile.in
--- vnc4-4.1.1+X4.3.0.orig_old/common/network/Makefile.in	2006-02-22 15:15:16.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/common/network/Makefile.in	2006-02-22 15:16:24.000000000 +1100
@@ -17,4 +17,5 @@
 DIR_CFLAGS = -DPIC -fPIC
 DIR_CXXFLAGS = -DPIC -fPIC
 
+DIR_CXXFLAGS = -DPIC -fPIC
 # followed by boilerplate.mk
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/common/network/TcpSocket.cxx vnc4-4.1.1+X4.3.0.orig/common/network/TcpSocket.cxx
--- vnc4-4.1.1+X4.3.0.orig_old/common/network/TcpSocket.cxx	2005-03-12 02:08:41.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/common/network/TcpSocket.cxx	2006-02-22 15:16:24.000000000 +1100
@@ -54,6 +54,29 @@
 
 static rfb::LogWriter vlog("TcpSocket");
 
+/* Tunnelling support. */
+int network::findFreeTcpPort (void)
+{
+  int sock, port;
+  struct sockaddr_in addr;
+  memset(&addr, 0, sizeof(addr));
+  addr.sin_family = AF_INET;
+  addr.sin_addr.s_addr = INADDR_ANY;
+
+  if ((sock = socket (AF_INET, SOCK_STREAM, 0)) < 0)
+    throw SocketException ("unable to create socket", errorNumber);
+
+  for (port = TUNNEL_PORT_OFFSET + 99; port > TUNNEL_PORT_OFFSET; port--) {
+    addr.sin_port = htons ((unsigned short) port);
+    if (bind (sock, (struct sockaddr *)&addr, sizeof (addr)) == 0) {
+      close (sock);
+      return port;
+    }
+  }
+  throw SocketException ("no free port in range", 0);
+  return 0;
+}
+
 
 // -=- Socket initialisation
 static bool socketsInitialised = false;
@@ -117,10 +140,14 @@
   }
 
   // Attempt to connect to the remote host
-  if (connect(sock, (struct sockaddr *)&addr, sizeof(addr)) != 0) {
-    int e = errorNumber;
-    closesocket(sock);
-    throw SocketException("unable to connect to host", e);
+  for (;;) {
+    if (connect(sock, (struct sockaddr *)&addr, sizeof(addr)) != 0) {
+      int e = errorNumber;
+      if (e == EINTR)
+        continue;
+      closesocket(sock);
+      throw SocketException("unable to connect to host", e);
+    } else break;
   }
 
   // Disable Nagle's algorithm, to reduce latency
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/common/network/TcpSocket.h vnc4-4.1.1+X4.3.0.orig/common/network/TcpSocket.h
--- vnc4-4.1.1+X4.3.0.orig_old/common/network/TcpSocket.h	2005-03-12 02:08:41.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/common/network/TcpSocket.h	2006-02-22 15:16:24.000000000 +1100
@@ -32,8 +32,14 @@
 
 #include <list>
 
+/* Tunnelling support. */
+#define TUNNEL_PORT_OFFSET 5500
+
 namespace network {
 
+  /* Tunnelling support. */
+  int findFreeTcpPort (void);
+
   class TcpSocket : public Socket {
   public:
     TcpSocket(int sock, bool close=true);
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/common/rdr/Makefile.in vnc4-4.1.1+X4.3.0.orig/common/rdr/Makefile.in
--- vnc4-4.1.1+X4.3.0.orig_old/common/rdr/Makefile.in	2006-02-22 15:15:16.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/common/rdr/Makefile.in	2006-02-22 15:16:24.000000000 +1100
@@ -19,4 +19,5 @@
 DIR_CFLAGS = -DPIC -fPIC
 DIR_CXXFLAGS = -DPIC -fPIC
 
+DIR_CXXFLAGS = -DPIC -fPIC
 # followed by boilerplate.mk
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/common/rfb/Makefile.in vnc4-4.1.1+X4.3.0.orig/common/rfb/Makefile.in
--- vnc4-4.1.1+X4.3.0.orig_old/common/rfb/Makefile.in	2006-02-22 15:15:16.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/common/rfb/Makefile.in	2006-02-22 15:16:24.000000000 +1100
@@ -68,4 +68,6 @@
 DIR_CFLAGS = -DPIC -fPIC
 DIR_CXXFLAGS = -DPIC -fPIC
 
+DIR_CFLAGS = -DPIC -fPIC
+DIR_CXXFLAGS = -DPIC -fPIC
 # followed by boilerplate.mk
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/common/rfb/ServerCore.cxx vnc4-4.1.1+X4.3.0.orig/common/rfb/ServerCore.cxx
--- vnc4-4.1.1+X4.3.0.orig_old/common/rfb/ServerCore.cxx	2005-03-12 02:08:41.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/common/rfb/ServerCore.cxx	2006-02-22 15:16:24.000000000 +1100
@@ -29,7 +29,7 @@
 ("IdleTimeout",
  "The number of seconds after which an idle VNC connection will be dropped "
  "(zero means no timeout)",
- 3600, 0);
+ 0, 0);
 rfb::IntParameter rfb::Server::clientWaitTimeMillis
 ("ClientWaitTimeMillis",
  "The number of milliseconds to wait for a client which is no longer "
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/common/Xregion/Makefile.in vnc4-4.1.1+X4.3.0.orig/common/Xregion/Makefile.in
--- vnc4-4.1.1+X4.3.0.orig_old/common/Xregion/Makefile.in	2006-02-22 15:15:16.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/common/Xregion/Makefile.in	2006-02-22 15:16:24.000000000 +1100
@@ -15,4 +15,5 @@
 DIR_CFLAGS = -DPIC -fPIC
 DIR_CXXFLAGS = -DPIC -fPIC
 
+DIR_CFLAGS = -DPIC -fPIC
 # followed by boilerplate.mk
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/unix/configure.in vnc4-4.1.1+X4.3.0.orig/unix/configure.in
--- vnc4-4.1.1+X4.3.0.orig_old/unix/configure.in	2005-01-12 03:37:17.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/unix/configure.in	2006-02-22 15:16:24.000000000 +1100
@@ -65,6 +65,18 @@
 AC_SUBST(ZLIB_INCLUDE)
 AC_SUBST(ZLIB_LIB)
 
+AC_ARG_WITH(fb,
+[  --with-fb               use the new 'fb' framebuffer implementation])
+if test "$with_installed_zlib" = yes; then
+  echo "using 'fb' framebuffer"
+  USE_FB=YES
+else
+  echo "using 'mfb' and 'cfb' framebuffer"
+  USE_FB=NO
+fi
+
+AC_SUBST(USE_FB)
+
 BOILERPLATE=boilerplate.mk
 
 if (sh -c "make --version" 2>/dev/null | grep GNU 2>&1 >/dev/null); then
@@ -79,4 +91,5 @@
           vncviewer/Makefile:common.mk:vncviewer/Makefile.in:$BOILERPLATE \
           vncconfig/Makefile:common.mk:vncconfig/Makefile.in:$BOILERPLATE \
           vncpasswd/Makefile:common.mk:vncpasswd/Makefile.in:$BOILERPLATE \
+          xc/config/cf/vnc.def \
 )
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/unix/vncserver vnc4-4.1.1+X4.3.0.orig/unix/vncserver
--- vnc4-4.1.1+X4.3.0.orig_old/unix/vncserver	2005-02-23 23:28:18.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/unix/vncserver	2006-02-22 15:16:24.000000000 +1100
@@ -42,6 +42,10 @@
 
 $defaultXStartup
     = ("#!/bin/sh\n\n".
+       "# Uncomment the following two lines for normal desktop:\n".
+       "# unset SESSION_MANAGER\n".
+       "# exec /etc/X11/xinit/xinitrc\n\n".
+       "[ -x /etc/vnc/xstartup ] && exec /etc/vnc/xstartup\n".
        "[ -r \$HOME/.Xresources ] && xrdb \$HOME/.Xresources\n".
        "xsetroot -solid grey\n".
        "vncconfig -iconic &\n".
@@ -116,18 +120,12 @@
 $desktopLog = "$vncUserDir/$host:$displayNumber.log";
 unlink($desktopLog);
 
-# Make an X server cookie - use as the seed the sum of the current time, our
-# PID and part of the encrypted form of the password.  Ideally we'd use
-# /dev/urandom, but that's only available on Linux.
-
-srand(time+$$+unpack("L",`cat $vncUserDir/passwd`));
-$cookie = "";
-for (1..16) {
-    $cookie .= sprintf("%02x", int(rand(256)) % 256);
-}
-    
-system("xauth -f $xauthorityFile add $host:$displayNumber . $cookie");
-system("xauth -f $xauthorityFile add $host/unix:$displayNumber . $cookie"); 
+# Make an X server cookie - use mcookie
+$cookie = `/usr/bin/mcookie`;
+open (XAUTH, "|xauth -f $xauthorityFile source -");
+print XAUTH "add $host:$displayNumber . $cookie\n";
+print XAUTH "add $host/unix:$displayNumber . $cookie\n";
+close XAUTH;
 
 if ($opt{'-name'}) {
     $desktopName = $opt{'-name'};
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/unix/vncviewer/vncviewer.cxx vnc4-4.1.1+X4.3.0.orig/unix/vncviewer/vncviewer.cxx
--- vnc4-4.1.1+X4.3.0.orig_old/unix/vncviewer/vncviewer.cxx	2005-03-12 02:08:41.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/unix/vncviewer/vncviewer.cxx	2006-02-22 15:16:24.000000000 +1100
@@ -41,6 +41,7 @@
 
 using namespace network;
 using namespace rfb;
+using namespace std;
 
 IntParameter pointerEventInterval("PointerEventInterval",
                                   "Time in milliseconds to rate-limit"
@@ -95,6 +96,9 @@
 StringParameter geometry("geometry", "X geometry specification", "");
 StringParameter displayname("display", "The X display", "");
 
+/* Support for tunnelling */
+StringParameter via("via", "Gateway to tunnel via", "");
+
 char aboutText[256];
 char* programName;
 extern char buildtime[];
@@ -157,6 +161,61 @@
   exit(1);
 }
 
+/* Tunnelling support. */
+static void
+interpretViaParam (char **gatewayHost, char **remoteHost,
+                  int *remotePort, char **vncServerName,
+                  int localPort)
+{
+  const int SERVER_PORT_OFFSET = 5900;
+  char *pos = strchr (*vncServerName, ':');
+  if (pos == NULL)
+    *remotePort = SERVER_PORT_OFFSET;
+  else {
+    int portOffset = SERVER_PORT_OFFSET;
+    size_t len;
+    *pos++ = '\0';
+    len = strlen (pos);
+    if (*pos == ':') {
+      /* Two colons is an absolute port number, not an offset. */
+      pos++;
+      len--;
+      portOffset = 0;
+    }
+    if (!len || strspn (pos, "-0123456789") != len )
+      usage ();
+    *remotePort = atoi (pos) + portOffset;
+  }
+
+  if (**vncServerName != '\0')
+    *remoteHost = *vncServerName;
+
+  *gatewayHost = strDup (via.getValueStr ());
+  *vncServerName = new char[50];
+  sprintf (*vncServerName, "localhost::%d", localPort);
+}
+
+static void
+createTunnel (const char *gatewayHost, const char *remoteHost,
+             int remotePort, int localPort)
+{
+  char *cmd = getenv ("VNC_VIA_CMD");
+  char *percent;
+  char lport[10], rport[10];
+  sprintf (lport, "%d", localPort);
+  sprintf (rport, "%d", remotePort);
+  setenv ("G", gatewayHost, 1);
+  setenv ("H", remoteHost, 1);
+  setenv ("R", rport, 1);
+  setenv ("L", lport, 1);
+  if (!cmd)
+    cmd = "/usr/bin/ssh -f -L \"$L\":\"$H\":\"$R\" \"$G\" sleep 20";
+  /* Compatibility with TightVNC's method. */
+  while ((percent = strchr (cmd, '%')) != NULL)
+    *percent = '$';
+  system (cmd);
+}
+
 int main(int argc, char** argv)
 {
   sprintf(aboutText, "VNC Viewer Free Edition 4.1.1 for X - built %s\n"
@@ -190,8 +249,6 @@
       usage();
     }
 
-    if (vncServerName)
-      usage();
     vncServerName = argv[i];
   }
 
@@ -207,6 +264,19 @@
     vlog.error("Could not create .vnc directory: environment variable $HOME not set.");
 
   try {
+    /* Tunnelling support. */
+    if (strlen (via.getValueStr ()) > 0) {
+      char *gatewayHost = "";
+      char *remoteHost = "localhost";
+      int localPort = findFreeTcpPort ();
+      int remotePort;
+      if (!vncServerName)
+        usage();
+      interpretViaParam (&gatewayHost, &remoteHost, &remotePort,
+                        &vncServerName, localPort);
+      createTunnel (gatewayHost, remoteHost, remotePort, localPort);
+    }
+
     Socket* sock = 0;
 
     if (listenMode) {
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/unix/vncviewer/vncviewer.man vnc4-4.1.1+X4.3.0.orig/unix/vncviewer/vncviewer.man
--- vnc4-4.1.1+X4.3.0.orig_old/unix/vncviewer/vncviewer.man	2005-03-04 00:10:40.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/unix/vncviewer/vncviewer.man	2006-02-22 15:16:24.000000000 +1100
@@ -174,6 +174,23 @@
 specified as an X11 keysym name (these can be obtained by removing the XK_
 prefix from the entries in "/usr/include/X11/keysymdef.h").  Default is F8.
 
+.TP
+\fB\-via\fR \fIgateway\fR
+Automatically create encrypted TCP tunnel to the \fIgateway\fR machine
+before connection, connect to the \fIhost\fR through that tunnel
+(TightVNC\-specific). By default, this option invokes SSH local port
+forwarding, assuming that SSH client binary can be accessed as
+/usr/bin/ssh. Note that when using the \fB\-via\fR option, the host
+machine name should be specified as known to the gateway machine, e.g.
+"localhost" denotes the \fIgateway\fR, not the machine where vncviewer
+was launched. The environment variable \fIVNC_VIA_CMD\fR can override
+the default tunnel command of
+\fB/usr/bin/ssh\ -f\ -L\ "$L":"$H":"$R"\ "$G"\ sleep\ 20\fR.  The tunnel
+command is executed with the environment variables \fIL\fR, \fIH\fR,
+\fIR\fR, and \fIG\fR taken the values of the local port number, the remote
+host, the port number on the remote host, and the gateway machine
+respectively.
+
 .SH SEE ALSO
 .BR Xvnc (1),
 .BR vncpasswd (1),
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/unix/xc/config/cf/vnc.def.in vnc4-4.1.1+X4.3.0.orig/unix/xc/config/cf/vnc.def.in
--- vnc4-4.1.1+X4.3.0.orig_old/unix/xc/config/cf/vnc.def.in	1970-01-01 10:00:00.000000000 +1000
+++ vnc4-4.1.1+X4.3.0.orig/unix/xc/config/cf/vnc.def.in	2006-02-22 15:16:24.000000000 +1100
@@ -0,0 +1,38 @@
+#define BuildServersOnly YES
+#define BuildFonts NO
+#define BuildClients NO
+#define BuildDocs NO
+#define BuildPexExt NO
+#define BuildNls NO
+#define BuildXIE NO
+#define BuildGlxExt NO
+#define XnestServer YES
+#define XF86Server NO
+#define XprtServer NO
+
+#ifdef SunArchitecture
+#define ProjectRoot /usr/openwin
+#define HasGcc2 YES
+#define BuildXKB NO
+#endif
+
+#define HasFreetype2 NO
+#define BuildVNCExt YES
+#define VNCExtDefines -DVNCEXT
+#define SiteExtensionDefines VNCExtDefines
+#define SiteExtensionDirs vnc
+
+#define VncUseFb @USE_FB@
+
+#define VncUnixDir $(TOP)/..
+#define VncCommonDir VncUnixDir/../common
+#define VncExtLibs VncCommonDir/rfb/librfb.a \
+                   VncCommonDir/Xregion/libXregion.a \
+                   VncCommonDir/network/libnetwork.a \
+                   VncCommonDir/rdr/librdr.a
+
+#define SiteExtensionLibs vnc/LibraryTargetName(vnc) VncExtLibs
+
+#define	ServerTarget(server,subdirs,objects,libs,syslibs)		@@\
+CCLINK = $(CXXENVSETUP) $(CXX) @@\
+ServerTargetWithFlags(server,subdirs,objects,libs,syslibs,$(_NOOP_))
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/unix/xc/programs/Xserver/vnc/Imakefile vnc4-4.1.1+X4.3.0.orig/unix/xc/programs/Xserver/vnc/Imakefile
--- vnc4-4.1.1+X4.3.0.orig_old/unix/xc/programs/Xserver/vnc/Imakefile	2004-07-14 03:21:33.000000000 +1000
+++ vnc4-4.1.1+X4.3.0.orig/unix/xc/programs/Xserver/vnc/Imakefile	2006-02-22 15:16:24.000000000 +1100
@@ -19,7 +19,7 @@
          SRCS = vncExtInit.cc vncHooks.cc XserverDesktop.cc
          OBJS = vncExtInit.o vncHooks.o XserverDesktop.o
      INCLUDES = -I../include -I$(EXTINCSRC) -I$(XINCLUDESRC) -I$(FONTINCSRC) \
-                -I../mfb -I../mi $(VNCINCLUDE)
+                -I../render $(VNCINCLUDE)
 #if defined(XFree86Version) && XFree86Version >= 4000
    VNCDEFINES = -DGC_HAS_COMPOSITE_CLIP
 #endif
@@ -36,8 +36,8 @@
 NormalLintTarget($(SRCS))
 
 NormalLibraryObjectRule()
-NormalCplusplusObjectRule()
-
+.CCsuf.Osuf:
+	NormalSharedLibObjCplusplusCompile($(_NOOP_))
 
 MakeSubdirs($(SUBDIRS))
 DependSubdirs($(SUBDIRS))
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/unix/xc/programs/Xserver/vnc/module/Imakefile vnc4-4.1.1+X4.3.0.orig/unix/xc/programs/Xserver/vnc/module/Imakefile
--- vnc4-4.1.1+X4.3.0.orig_old/unix/xc/programs/Xserver/vnc/module/Imakefile	2006-02-22 15:15:16.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/unix/xc/programs/Xserver/vnc/module/Imakefile	2006-02-22 15:16:24.000000000 +1100
@@ -13,7 +13,7 @@
     OBJS = vncExtInit.o vncHooks.o xf86vncModule.o XserverDesktop.o
 INCLUDES = -I.. -I../../include -I$(EXTINCSRC) -I$(XINCLUDESRC) \
            -I$(FONTINCSRC) -I$(XF86COMSRC) \
-           $(VNCINCLUDE)
+           -I../../render $(VNCINCLUDE)
  DEFINES = -fPIC $(STD_DEFINES) -DGC_HAS_COMPOSITE_CLIP -DXFree86LOADER
 
 LinkSourceFile(vncExtInit.cc,..)
@@ -21,7 +21,8 @@
 LinkSourceFile(xf86vncModule.cc,..)
 LinkSourceFile(XserverDesktop.cc,..)
 
-ModuleObjectRule()
+.CCsuf.Osuf:
+	NormalSharedLibObjCplusplusCompile($(_NOOP_))
 /*
  LibraryModuleTarget(vnc,$(OBJS) $(VNCLIBS))
  InstallLibraryModule(vnc,$(MODULEDIR),extensions)
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/unix/xc/programs/Xserver/vnc/vncHooks.cc vnc4-4.1.1+X4.3.0.orig/unix/xc/programs/Xserver/vnc/vncHooks.cc
--- vnc4-4.1.1+X4.3.0.orig_old/unix/xc/programs/Xserver/vnc/vncHooks.cc	2005-03-12 02:08:41.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/unix/xc/programs/Xserver/vnc/vncHooks.cc	2006-02-22 15:16:24.000000000 +1100
@@ -29,6 +29,9 @@
 #include "regionstr.h"
 #include "dixfontstr.h"
 #include "colormapst.h"
+#ifdef RENDER
+#include "picturestr.h"
+#endif
 
 #ifdef GC_HAS_COMPOSITE_CLIP
 #define COMPOSITE_CLIP(gc) ((gc)->pCompositeClip)
@@ -74,6 +77,9 @@
   StoreColorsProcPtr           StoreColors;
   DisplayCursorProcPtr         DisplayCursor;
   ScreenBlockHandlerProcPtr    BlockHandler;
+#ifdef RENDER
+  CompositeProcPtr             Composite;
+#endif
 } vncHooksScreenRec, *vncHooksScreenPtr;
 
 typedef struct {
@@ -104,6 +110,13 @@
 static Bool vncHooksDisplayCursor(ScreenPtr pScreen, CursorPtr cursor);
 static void vncHooksBlockHandler(int i, pointer blockData, pointer pTimeout,
                                  pointer pReadmask);
+#ifdef RENDER
+static void vncHooksComposite(CARD8 op, PicturePtr pSrc, PicturePtr pMask,
+                              PicturePtr pDst, INT16 xSrc, INT16 ySrc,
+                              INT16 xMask, INT16 yMask, INT16 xDst, INT16 yDst,
+                              CARD16 width, CARD16 height);
+#endif
+
 
 // GC "funcs"
 
@@ -229,6 +242,13 @@
   vncHooksScreen->StoreColors = pScreen->StoreColors;
   vncHooksScreen->DisplayCursor = pScreen->DisplayCursor;
   vncHooksScreen->BlockHandler = pScreen->BlockHandler;
+#ifdef RENDER
+  PictureScreenPtr ps;
+  ps = GetPictureScreenIfSet(pScreen);
+  if (ps) {
+    vncHooksScreen->Composite = ps->Composite;
+  }
+#endif
 
   pScreen->CloseScreen = vncHooksCloseScreen;
   pScreen->CreateGC = vncHooksCreateGC;
@@ -241,6 +261,11 @@
   pScreen->StoreColors = vncHooksStoreColors;
   pScreen->DisplayCursor = vncHooksDisplayCursor;
   pScreen->BlockHandler = vncHooksBlockHandler;
+#ifdef RENDER
+  if (ps) {
+    ps->Composite = vncHooksComposite;
+  }
+#endif
 
   return TRUE;
 }
@@ -470,6 +495,38 @@
   SCREEN_REWRAP(BlockHandler);
 }
 
+// Composite - needed for RENDER
+
+#ifdef RENDER
+void vncHooksComposite(CARD8 op, PicturePtr pSrc, PicturePtr pMask,
+                      PicturePtr pDst, INT16 xSrc, INT16 ySrc, INT16 xMask,
+                      INT16 yMask, INT16 xDst, INT16 yDst, CARD16 width,
+                      CARD16 height)
+{
+  ScreenPtr pScreen = pDst->pDrawable->pScreen;
+  vncHooksScreenPtr vncHooksScreen = \
+    ((vncHooksScreenPtr)pScreen->devPrivates[vncHooksScreenIndex].ptr);
+  BoxRec box;
+  PictureScreenPtr ps = GetPictureScreen(pScreen);
+
+  if ((xDst >= 0) && (yDst >= 0)) {
+      box.x1 = pDst->pDrawable->x + xDst;
+      box.y1 = pDst->pDrawable->y + yDst;
+      box.x2 = box.x1 + width;
+      box.y2 = box.y1 + height;
+
+      RegionHelper changed(pScreen, &box, 0);
+      vncHooksScreen->desktop->add_changed(changed.reg);
+  }
+
+  ps->Composite = vncHooksScreen->Composite;
+  (*ps->Composite)(op, pSrc, pMask, pDst, xSrc, ySrc,
+                   xMask, yMask, xDst, yDst, width, height);
+  ps->Composite = vncHooksComposite;
+}
+
+#endif /* RENDER */
+
 
 
 /////////////////////////////////////////////////////////////////////////////
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/unix/xc/programs/Xserver/vnc/Xvnc/Imakefile vnc4-4.1.1+X4.3.0.orig/unix/xc/programs/Xserver/vnc/Xvnc/Imakefile
--- vnc4-4.1.1+X4.3.0.orig_old/unix/xc/programs/Xserver/vnc/Xvnc/Imakefile	2005-03-11 01:51:39.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/unix/xc/programs/Xserver/vnc/Xvnc/Imakefile	2006-02-22 15:16:24.000000000 +1100
@@ -31,12 +31,19 @@
 OBJS1 = os2_stubs.o
 #endif
 
+#ifdef VncUseFb
+FB_DEFINES = -DVNC_USE_FB
+ FBINCLUDE = -I../../fb
+#else
+ FBINCLUDE = -I../../cfb
+#endif
+
 SRCSA =	xvnc.cc stubs.c $(SRCS1) miinitext.c $(SRCS2)
 
 OBJSA =	xvnc.o stubs.o $(OBJS1) miinitext.o $(OBJS2)
 
-INCLUDES = -I. -I.. -I$(XBUILDINCDIR) -I$(FONTINCSRC) \
-	   -I../../cfb -I../../mfb -I../../mi -I../../include -I../../os  \
+INCLUDES = -I. -I.. -I$(XBUILDINCDIR) -I$(FONTINCSRC) $(FB_DEFINES) \
+	   $(FBINCLUDE) -I../../mfb -I../../mi -I../../include -I../../os  \
            -I$(EXTINCSRC) -I$(XINCLUDESRC)  -I$(SERVERSRC)/render $(VNCINCLUDE)
 
 DEFINES = $(OS_DEFINES) $(SHMDEF) $(MMAPDEF) \
@@ -48,7 +55,7 @@
  * Make sure XINPUT, XF86VidTune, etc arent defined for the miinitext.o 
  * used by Xvnc 
  */
-EXT_DEFINES = ExtensionDefines -UXF86VIDMODE -UXFreeXDGA -UXF86MISC
+EXT_DEFINES = ExtensionDefines -UXINPUT -UXF86VIDMODE -UXFreeXDGA -UXF86MISC
 #endif
 
 
@@ -70,7 +77,7 @@
 SpecialCplusplusObjectRule(xvnc,$(ICONFIGFILES) xvnc,$(EXT_DEFINES) $(NO_OPERATOR_NAMES))
 
 LinkSourceFile(miinitext.c,$(SERVERSRC)/mi)
-SpecialCObjectRule(miinitext,$(ICONFIGFILES),$(EXT_DEFINES) $(PAN_DEFINES) -DNO_MODULE_EXTS $(EXT_MODULE_DEFINES) -UXFree86LOADER)
+SpecialCObjectRule(miinitext,$(ICONFIGFILES),$(EXT_DEFINES) $(PAN_DEFINES) -DNO_HW_ONLY_EXTS -DNO_MODULE_EXTS $(EXT_MODULE_DEFINES) -UXFree86LOADER)
 
 /* InstallManPage(Xvfb,$(MANDIR)) */
 DependTarget()
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/unix/xc/programs/Xserver/vnc/Xvnc/xvnc.cc vnc4-4.1.1+X4.3.0.orig/unix/xc/programs/Xserver/vnc/Xvnc/xvnc.cc
--- vnc4-4.1.1+X4.3.0.orig_old/unix/xc/programs/Xserver/vnc/Xvnc/xvnc.cc	2005-03-11 02:52:58.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/unix/xc/programs/Xserver/vnc/Xvnc/xvnc.cc	2006-02-22 15:16:24.000000000 +1100
@@ -48,8 +48,12 @@
 #include "X11/Xos.h"
 #include "scrnintstr.h"
 #include "servermd.h"
+#ifdef VNC_USE_FB
+#include "fb.h"
+#else
 #define PSZ 8
 #include "cfb.h"
+#endif
 #include "mi.h"
 #include "mibstore.h"
 #include "colormapst.h"
@@ -73,6 +77,7 @@
 #undef public
 #undef xor
 #undef and
+#ifndef VNC_USE_FB
   extern Bool cfb16ScreenInit(ScreenPtr, pointer, int, int, int, int, int);
   extern Bool cfb32ScreenInit(ScreenPtr, pointer, int, int, int, int, int);
   extern Bool cfb16CreateGC(GCPtr);
@@ -83,6 +88,7 @@
                             unsigned long, char*);
   extern void cfb32GetImage(DrawablePtr, int, int, int, int, unsigned int,
                             unsigned long, char*);
+#endif
 }
 
 #define XVNCVERSION "Free Edition 4.1.1"
@@ -129,6 +135,9 @@
 static Bool vfbPixmapDepths[33];
 static char needswap = 0;
 static int lastScreen = -1;
+#ifdef RENDER
+static Bool Render = FALSE;
+#endif
 
 static bool displaySpecified = false;
 static bool wellKnownSocketsCreated = false;
@@ -220,6 +229,10 @@
            VENDOR_STRING);
     ErrorF("-screen scrn WxHxD     set screen's width, height, depth\n");
     ErrorF("-pixdepths list-of-int support given pixmap depths\n");
+#ifdef RENDER
+    ErrorF("+/-render             turn on/off RENDER extension support"
+          "(default on)\n");
+#endif
     ErrorF("-linebias n            adjust thin line pixelization\n");
     ErrorF("-blackpixel n          pixel value for black\n");
     ErrorF("-whitepixel n          pixel value for white\n");
@@ -316,6 +329,20 @@
     return ret;
   }
 
+#ifdef RENDER
+  if (strcmp (argv[i], "+render") == 0)        /* +render */
+  {
+    Render = TRUE;
+    return 1;
+  }
+
+  if (strcmp (argv[i], "-render") == 0)        /* -render */
+  {
+    Render = FALSE;
+    return 1;
+  }
+#endif
+
   if (strcmp (argv[i], "-blackpixel") == 0)	/* -blackpixel n */
   {
     Pixel pix;
@@ -482,7 +509,7 @@
 }
 #endif
 
-
+#ifndef VNC_USE_FB
 static Bool vfbMultiDepthCreateGC(GCPtr   pGC)
 {
   switch (vfbBitsPerPixel(pGC->depth))
@@ -541,6 +568,7 @@
     break;
   }
 }
+#endif
 
 static ColormapPtr InstalledMaps[MAXSCREENS];
 
@@ -811,6 +839,16 @@
   defaultColorVisualClass
     = (pvfb->bitsPerPixel > 8) ? TrueColor : PseudoColor;
 
+#ifdef VNC_USE_FB
+  if (!fbScreenInit(pScreen, pbits, pvfb->width, pvfb->height,
+                    dpi, dpi, pvfb->paddedWidth, pvfb->bitsPerPixel))
+      return FALSE;
+
+#ifdef RENDER
+  if (ret && Render)
+      fbPictureInit(pScreen, 0, 0);
+#endif /* RENDER */
+#else /* VNC_USE_FB */
   switch (pvfb->bitsPerPixel)
   {
   case 1:
@@ -838,6 +876,7 @@
   pScreen->CreateGC = vfbMultiDepthCreateGC;
   pScreen->GetImage = vfbMultiDepthGetImage;
   pScreen->GetSpans = vfbMultiDepthGetSpans;
+#endif
 
   pScreen->InstallColormap = vfbInstallColormap;
   pScreen->UninstallColormap = vfbUninstallColormap;
@@ -883,6 +922,9 @@
     }
   }
 
+#ifdef VNC_USE_FB
+  ret = fbCreateDefColormap(pScreen);
+#else
   if (pvfb->bitsPerPixel == 1)
   {
     ret = mfbCreateDefColormap(pScreen);
@@ -891,6 +933,7 @@
   {
     ret = cfbCreateDefColormap(pScreen);
   }
+#endif
 
   miSetZeroLineBias(pScreen, pvfb->lineBias);
 
@@ -926,6 +969,19 @@
     vfbPixmapDepths[vfbScreens[i].depth] = TRUE;
   }
 
+#ifdef RENDER
+  /* RENDER needs a good set of pixmaps. */
+  if (Render) {
+      vfbPixmapDepths[1] = TRUE;
+      vfbPixmapDepths[4] = TRUE;
+      vfbPixmapDepths[8] = TRUE;
+/*    vfbPixmapDepths[15] = TRUE; */
+      vfbPixmapDepths[16] = TRUE;
+      vfbPixmapDepths[24] = TRUE;
+      vfbPixmapDepths[32] = TRUE;
+  }
+#endif
+
   for (i = 1; i <= 32; i++)
   {
     if (vfbPixmapDepths[i])
diff -Naur vnc4-4.1.1+X4.3.0.orig_old/unix/xc.patch vnc4-4.1.1+X4.3.0.orig/unix/xc.patch
--- vnc4-4.1.1+X4.3.0.orig_old/unix/xc.patch	2004-12-01 22:33:15.000000000 +1100
+++ vnc4-4.1.1+X4.3.0.orig/unix/xc.patch	2006-02-22 15:16:24.000000000 +1100
@@ -2,7 +2,7 @@
 --- xc/programs/Xserver/Imakefile	Fri Jun  6 11:14:39 2003
 ***************
 *** 409,412 ****
---- 409,429 ----
+--- 409,435 ----
   #endif
   #endif /* XsunServer */
 + XCOMM
@@ -13,12 +13,18 @@
 + CFB16DIR = cfb16
 + CFB24DIR = cfb24
 + CFB32DIR = cfb32
++ FBDIR = fb
 + XVNCDDXDIR = vnc/Xvnc
++ #if VncUseFb
++ XVNCDIRS = $(STDDIRS) $(FBDIR) $(XVNCDDXDIR) $(DEPDIRS)
++ XVNCLIBS = PreFbLibs vnc/Xvnc/LibraryTargetName(xvnc) FbPostFbLibs
++ #else
 + XVNCDIRS = $(STDDIRS) $(MFBDIR) \
 + 	    $(CFB8DIR) $(CFB16DIR) $(CFB24DIR) $(CFB32DIR) \
 + 	    $(XVNCDDXDIR) $(DEPDIRS)
-+ XVNCOBJS = $(XVNCDDXDIR)/stubs.o $(XVNCDDXDIR)/miinitext.o
 + XVNCLIBS = PreFbLibs vnc/Xvnc/LibraryTargetName(xvnc) CFBLibs PostFbLibs
++ #endif
++ XVNCOBJS = $(XVNCDDXDIR)/stubs.o $(XVNCDDXDIR)/miinitext.o
 + XVNCSYSLIBS = $(FONTLIBS) $(SYSLIBS)
 + ServerTarget(Xvnc,$(XVNCDIRS),$(XVNCOBJS), \
 + 	$(LIBCWRAPPER) $(XVNCLIBS) $(LOADABLEEXTS),$(XVNCSYSLIBS))
