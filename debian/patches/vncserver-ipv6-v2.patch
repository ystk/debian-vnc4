--- orig/vnc4-4.1.1+X4.3.0/common/network/TcpSocket.cxx	2009-10-13 03:39:50.000000000 +0600
+++ vnc4-4.1.1+X4.3.0/common/network/TcpSocket.cxx	2009-10-14 01:41:55.451051305 +0600
@@ -314,9 +314,30 @@
     return;
   }
 
+  bool use_ipv6;
+  int af;
+#ifdef AF_INET6
+  // - localhostOnly will mean "127.0.0.1 only", no IPv6
+  if (use_ipv6 = !localhostOnly)
+    af = AF_INET6;
+  else
+    af = AF_INET;
+#else
+  use_ipv6 = false;
+  af = AF_INET;
+#endif
+
   initSockets();
-  if ((fd = socket(AF_INET, SOCK_STREAM, 0)) < 0)
-    throw SocketException("unable to create listening socket", errorNumber);
+  if ((fd = socket(af, SOCK_STREAM, 0)) < 0) {
+    if (use_ipv6) {
+      // - We were trying to make an IPv6-capable socket - try again, but IPv4-only
+      use_ipv6 = false;
+      af = AF_INET;
+      fd = socket(af, SOCK_STREAM, 0);
+    }
+    if (fd < 0)
+      throw SocketException("unable to create listening socket", errorNumber);
+  }
 
 #ifndef WIN32
   // - By default, close the socket on exec()
@@ -333,14 +354,25 @@
 
   // - Bind it to the desired port
   struct sockaddr_in addr;
-  memset(&addr, 0, sizeof(addr));
-  addr.sin_family = AF_INET;
-  addr.sin_port = htons(port);
-  if (localhostOnly)
-    addr.sin_addr.s_addr = htonl(INADDR_LOOPBACK);
-  else
-    addr.sin_addr.s_addr = htonl(INADDR_ANY);
-  if (bind(fd, (struct sockaddr *)&addr, sizeof(addr)) < 0) {
+  struct sockaddr_in6 addr6;
+  struct sockaddr *sa;
+  int sa_len;
+  if (use_ipv6) {
+    memset(&addr6, 0, (sa_len = sizeof(addr6)));
+    addr6.sin6_family = af;
+    addr6.sin6_port = htons(port);
+    sa = (struct sockaddr*) &addr6;
+  } else {
+    memset(&addr, 0, (sa_len = sizeof(addr)));
+    addr.sin_family = af;
+    addr.sin_port = htons(port);
+    if (localhostOnly)
+      addr.sin_addr.s_addr = htonl(INADDR_LOOPBACK);
+    else
+      addr.sin_addr.s_addr = htonl(INADDR_ANY);
+    sa = (struct sockaddr*) &addr;
+  }
+  if (bind(fd, sa, sa_len) < 0) {
     int e = errorNumber;
     closesocket(fd);
     throw SocketException("unable to bind listening socket", e);
